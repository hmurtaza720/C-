@using M_UserLogin.ViewModels;        // 🔹 Import namespace containing the ChangePasswordViewModel class
@model ChangePasswordViewModel;       // 🔹 Bind the page to the ChangePasswordViewModel (used for form data)

@{
    ViewData["Title"] = "ChangePassword";                 // 🔹 Page title
    Layout = "~/Views/Shared/_AccountLayout.cshtml";       // 🔹 Use the shared account layout for consistent design
}

<!-- 🔸 Main container for the Change Password form -->
<div class="account-container">
    <div class="account-box">
        <h2 class="text-center mb-4">Change Password</h2>  <!-- 🔹 Page heading -->

        <!-- 🔸 Form that submits data to AccountController → ChangePassword (POST) -->
        <form asp-action="ChangePassword" method="post">

            <!-- 🔹 Display validation errors if any fields fail model validation -->
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- 🔸 Email (readonly field, cannot be changed) -->
            <div class="mb-3">
                <label asp-for="Email" class="form-label"></label>       <!-- Label for Email -->
                <input asp-for="Email" class="form-control" readonly />  <!-- Displays user email (readonly to prevent editing) -->
            </div>

            <!-- 🔸 New Password field -->
            <div class="mb-3">
                <label asp-for="NewPassword" class="form-label"></label>    <!-- Label for new password -->
                <input asp-for="NewPassword" class="form-control" />        <!-- Input box for new password -->
                <span asp-validation-for="NewPassword" class="text-danger"></span>  <!-- Shows password errors -->
            </div>

            <!-- 🔸 Confirm New Password field -->
            <div class="mb-3">
                <label asp-for="ConfirmNewPassword" class="form-label"></label>  <!-- Label for confirm password -->
                <input asp-for="ConfirmNewPassword" class="form-control" />      <!-- Input box for confirming new password -->
                <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span> <!-- Validation message if mismatch -->
            </div>

            <!-- 🔸 Submit button -->
            <input type="submit" value="Submit" class="btn btn-success w-100 p-2" /> <!-- Saves the new password -->

            <!-- 🔸 Back navigation link -->
            <div class="text-center mt-2">
                <a asp-controller="Account" asp-action="VerifyEmail" class="text-decoration-none mt-3">Back</a>
                <!-- Returns user to Verify Email page if they change their mind -->
            </div>
        </form>
    </div>
</div>

<!-- 🔸 Section for client-side validation scripts -->
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
        // Includes JavaScript/jQuery validation so users get instant error feedback
        // (e.g., password mismatch shown immediately without refreshing)
    }
}
